package com.example.util;

import java.io.FileInputStream;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Base64;
import java.util.Properties;

import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;

import com.example.security.EncryptionDecryptionAES;

public class DBConnectionUtil {
	private static Connection conn = null;
	
	public static Connection getConnetion() throws Exception {
	
			Properties props = new Properties();
			FileInputStream fis = null;
			Connection con = null;
			try {
				fis = new FileInputStream("db.properties");
				props.load(fis);

				// load the Driver Class
				//Class.forName(props.getProperty("DB_DRIVER_CLASS"));
				System.out.println(props.getProperty("DB_DRIVER_CLASS"));

				String encryptedPass = props.getProperty("DB_PASSWORD");
				// create the connection now
				//javax.crypto.spec.SecretKeySpec@179f1 - privateKey
				//EncryptionDecryptionAES.mainM();
				SecretKey privateKey = "javax.crypto.spec.SecretKeySpec@179f1"
			        System.out.println("privateKey is "+EncryptionDecryptionAES.myprivateKey);
				 String decryptedPassword = EncryptionDecryptionAES.decrypt(encryptedPass, EncryptionDecryptionAES.myprivateKey);
			        
				 System.out.println("Decrypted Password:-------bij " + decryptedPassword);
			        
				con = DriverManager.getConnection(props.getProperty("DB_URL"),
						props.getProperty("DB_USERNAME"),
						props.getProperty("DB_PASSWORD"));
			} catch ( SQLException e) {
				e.printStackTrace();
				
			}
			catch ( IOException e) {
			
				e.printStackTrace();
			}
			return con;
		}
	public static void main(String[] args) throws Exception {
		DBConnectionUtil.getConnetion();

	}
	}


